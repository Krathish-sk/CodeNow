// import React, { useState } from "react";
// import { v4 as uuidV4 } from "uuid";
// import toast from "react-hot-toast";
// import { useNavigate } from "react-router-dom";

// const Home = () => {
//   const navigate = useNavigate();

//   const [roomId, setRoomId] = useState("");
//   const [username, setUsername] = useState("");
//   const createNewRoom = (e) => {
//     e.preventDefault();
//     const id = uuidV4();
//     setRoomId(id);
//     toast.success("Created a new room");
//   };

//   const joinRoom = () => {
//     if (!roomId || !username) {
//       toast.error("ROOM ID & username is required");
//       return;
//     }

//     // Redirect
//     navigate(`/editor/${roomId}`, {
//       state: {
//         username,
//       },
//     });
//   };

//   const handleInputEnter = (e) => {
//     if (e.code === "Enter") {
//       joinRoom();
//     }
//   };
//   return (
//     <div className="homePageWrapper">
//       <div className="formWrapper">
//         <img
//           className="homePageLogo"
//           src="/code-sync.png"
//           alt="code-sync-logo"
//         />
//         <h4 className="mainLabel">Paste invitation ROOM ID</h4>
//         <div className="inputGroup">
//           <input
//             type="text"
//             className="inputBox"
//             placeholder="ROOM ID"
//             onChange={(e) => setRoomId(e.target.value)}
//             value={roomId}
//             onKeyUp={handleInputEnter}
//           />
//           <input
//             type="text"
//             className="inputBox"
//             placeholder="USERNAME"
//             onChange={(e) => setUsername(e.target.value)}
//             value={username}
//             onKeyUp={handleInputEnter}
//           />
//           <button className="btn joinBtn" onClick={joinRoom}>
//             Join
//           </button>
//           <span className="createInfo">
//             If you don't have an invite then create &nbsp;
//             <a onClick={createNewRoom} href="" className="createNewBtn">
//               new room
//             </a>
//           </span>
//         </div>
//       </div>
//       <footer>
//         <h4>
//           Built with ðŸ’› &nbsp; by &nbsp;
//           <a href="https://github.com/codersgyan">Coder's Gyan</a>
//         </h4>
//       </footer>
//     </div>
//   );
// };

// export default Home;

.homePageWrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
    height: 100vh;
}

.formWrapper {
    background: #282a36;
    padding: 20px;
    border-radius: 10px;
    width: 400px;
    max-width: 90%;
}

footer {
    position: fixed;
    bottom: 0;
}

footer a {
    color: #4aee88;
}

.inputGroup {
    display: flex;
    flex-direction: column;
}

.mainLabel {
    margin-bottom: 20px;
    margin-top: 0;
}

.homePageLogo {
    height: 80px;
    margin-bottom: 30px;
}

.inputBox {
    padding: 10px;
    border-radius: 5px;
    outline: none;
    border: none;
    margin-bottom: 14px;
    background: #eee;
    font-size: 16px;
    font-weight: bold;
}

.btn {
    border: none;
    padding: 10px;
    border-radius: 5px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.joinBtn,
.leaveBtn {
    background: #4aed88;
    width: 100px;
    margin-left: auto;
}

.joinBtn:hover,
.leaveBtn:hover {
    background: #2b824c;
}

.createInfo {
    margin: 0 auto;
    margin-top: 20px;
}

.createNewBtn {
    color: #4aed88;
    text-decoration: none;
    border-bottom: 1px solid #4aed88;
    transition: all 0.3s ease-in-out;
}

.createNewBtn:hover,
footer a:hover {
    color: #368654;
    border-color: #368654;
}

.mainWrap {
    display: grid;
    grid-template-columns: 230px 1fr;
}

.aside {
    background: #1c1e29;
    padding: 16px;
    color: #fff;
    display: flex;
    flex-direction: column;
}
.asideInner {
    flex: 1;
}

.clientsList {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
}

.client {
    display: flex;
    align-items: center;
    flex-direction: column;
    font-weight: bold;
}
.userName {
    margin-top: 10px;
}

.logo {
    border-bottom: 1px solid #424242;
    padding-bottom: 10px;
}

.logoImage {
    height: 60px;
}

.leaveBtn {
    width: 100%;
    margin-top: 20px;
}
.CodeMirror {
    min-height: calc(100vh - 20px);
    font-size: 20px;
    line-height: 1.6;
    padding-top: 20px;
}